// Generated by CoffeeScript 1.3.3
(function() {
  var ACUERDO, SEVERIDAD, compositeFrames, createSingleRuleFrame, exportName, simpleFrames, _window;

  simpleFrames = [];

  createSingleRuleFrame = function(name, severity, requiredSlots, ruleProcedure) {
    return simpleFrames.push((new Frame({
      name: name,
      severity: severity
    })).addRule(requiredSlots, ruleProcedure));
  };

  SEVERIDAD = {
    GRAVE: 'Grave',
    MEDIA: 'Media'
  };

  ACUERDO = {
    FIXED_PRICE: 'fp',
    CPFF: 'cpff',
    TIME_MAT: 'tm',
    MANPOWER: 'mp'
  };

  createSingleRuleFrame('Presupuesto superado', SEVERIDAD.GRAVE, ['totalBudget', 'executedBudget', 'projectType'], function(proj) {
    var _ref;
    return proj.budgetExceeded() && ((_ref = proj.projectType) === ACUERDO.FIXED_PRICE || _ref === ACUERDO.CPFF);
  });

  createSingleRuleFrame('Presupuesto superado', SEVERIDAD.MEDIA, ['totalBudget', 'executedBudget', 'projectType'], function(proj) {
    var _ref;
    return proj.budgetExceeded() && ((_ref = proj.projectType) !== ACUERDO.FIXED_PRICE && _ref !== ACUERDO.CPFF);
  });

  createSingleRuleFrame('Costos subestimados', SEVERIDAD.GRAVE, ['totalBudget', 'executedBudget', 'commitedFunctionality', 'deliveredFunctionality', 'projectType'], function(proj) {
    var deliveryRatio, spendingRatio, _ref;
    spendingRatio = proj.executedBudget / proj.totalBudget;
    deliveryRatio = proj.deliveredFunctionality / proj.commitedFunctionality;
    return spendingRatio > deliveryRatio && ((_ref = proj.projectType) === ACUERDO.FIXED_PRICE || _ref === ACUERDO.TIME_MAT);
  });

  createSingleRuleFrame('Costos subestimados', SEVERIDAD.MEDIA, ['totalBudget', 'executedBudget', 'commitedFunctionality', 'deliveredFunctionality', 'projectType'], function(proj) {
    var deliveryRatio, spendingRatio;
    spendingRatio = proj.executedBudget / proj.totalBudget;
    deliveryRatio = proj.deliveredFunctionality / proj.commitedFunctionality;
    return spendingRatio > deliveryRatio && proj.projectType === ACUERDO.CPFF;
  });

  createSingleRuleFrame('Calendario atrasado', SEVERIDAD.GRAVE, ['elapsedTime', 'estimatedTime', 'commitedFunctionality', 'deliveredFunctionality', 'projectType'], function(proj) {
    var calendarRatio, deliveryRatio;
    calendarRatio = proj.elapsedTime / proj.estimatedTime;
    deliveryRatio = proj.deliveredFunctionality / proj.commitedFunctionality;
    return calendarRatio > deliveryRatio && proj.projectType === ACUERDO.CPFF;
  });

  createSingleRuleFrame('Calendario atrasado', SEVERIDAD.MEDIA, ['elapsedTime', 'estimatedTime', 'commitedFunctionality', 'deliveredFunctionality', 'projectType'], function(proj) {
    var calendarRatio, deliveryRatio, _ref;
    calendarRatio = proj.elapsedTime / proj.estimatedTime;
    deliveryRatio = proj.deliveredFunctionality / proj.commitedFunctionality;
    return calendarRatio > deliveryRatio && ((_ref = proj.projectType) === ACUERDO.MANPOWER || _ref === ACUERDO.TIME_MAT);
  });

  createSingleRuleFrame('Esfuerzo subestimado', SEVERIDAD.GRAVE, ['investedEffort', 'estimatedEffort', 'commitedFunctionality', 'deliveredFunctionality'], function(proj) {
    var deliveryRatio, effortRatio;
    effortRatio = proj.investedEffort / proj.estimatedEffort;
    deliveryRatio = proj.deliveredFunctionality / proj.commitedFunctionality;
    return effortRatio > deliveryRatio;
  });

  createSingleRuleFrame('Gestion de cambios deficiente', SEVERIDAD.GRAVE, ['commitedFunctionality', 'deliveredFunctionality', 'projectType'], function(proj) {
    var _ref;
    return proj.deliveredFunctionality > 1.1 * proj.commitedFunctionality && ((_ref = proj.projectType) === ACUERDO.FIXED_PRICE || _ref === ACUERDO.CPFF);
  });

  createSingleRuleFrame('Gestion de cambios deficiente', SEVERIDAD.MEDIA, ['commitedFunctionality', 'deliveredFunctionality', 'projectType'], function(proj) {
    return proj.deliveredFunctionality > 1.1 * proj.commitedFunctionality && proj.projectType === ACUERDO.TIME_MAT;
  });

  createSingleRuleFrame('Calendario excedente', SEVERIDAD.MEDIA, ['elapsedTime', 'estimatedTime', 'commitedFunctionality', 'deliveredFunctionality'], function(proj) {
    var allDelivered, early;
    allDelivered = proj.deliveredFunctionality >= proj.commitedFunctionality;
    early = proj.estimatedTime > 1.1 * proj.elapsedTime;
    return allDelivered && early;
  });

  createSingleRuleFrame('Esfuerzo sobreestimado', SEVERIDAD.ALTO, ['investedEffort', 'estimatedEffort', 'commitedFunctionality', 'deliveredFunctionality', 'projectType'], function(proj) {
    var allDelivered, overestimated;
    allDelivered = proj.deliveredFunctionality >= proj.commitedFunctionality;
    overestimated = proj.estimatedEffort > 1.1 * proj.investedEffort;
    return allDelivered && overestimated && proj.projectType === ACUERDO.MANPOWER;
  });

  createSingleRuleFrame('Esfuerzo sobreestimado', SEVERIDAD.MEDIA, ['investedEffort', 'estimatedEffort', 'commitedFunctionality', 'deliveredFunctionality', 'projectType'], function(proj) {
    var allDelivered, overestimated;
    allDelivered = proj.deliveredFunctionality >= proj.commitedFunctionality;
    overestimated = proj.estimatedEffort > 1.1 * proj.investedEffort;
    return allDelivered && overestimated && proj.projectType === ACUERDO.FIXED_PRICE;
  });

  compositeFrames = [];

  compositeFrames.push(new CompositeFrame({
    name: 'Proyecto al horno',
    requiredFrames: ['Presupuesto superado', 'Gestion de cambios deficiente']
  }));

  _window = this;

  exportName = function(name, value) {
    if (!(_.isString(name) && !_.isEmpty(name))) {
      return;
    }
    if (typeof module !== "undefined" && module !== null) {
      module.exports[name] = value;
    }
    return _window[name] = value;
  };

  exportName('simpleFrames', simpleFrames);

  exportName('compositeFrames', compositeFrames);

}).call(this);
